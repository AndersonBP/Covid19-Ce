import { defaults as defaultControls } from "ol/control";
import Map from "ol/Map";
import View from "ol/View";
import TileLayer from "ol/layer/Tile";
import XYZ from "ol/source/XYZ";
import ZoomToExtent from "ol/control/ZoomToExtent";
import * as olProj from "ol/proj";
import { Feature } from "ol";
import Point from "ol/geom/Point";
import { Icon, Style, Stroke, Text, Fill } from "ol/style";
import VectorSource from "ol/source/Vector";
import VectorLayer from "ol/layer/Vector";
import IconAnchorUnits from "ol/style/IconAnchorUnits";
import { AfterViewInit, Component } from "@angular/core";
import OSM from "ol/source/OSM";
import { focus } from "ol/events/condition";
import { MouseWheelZoom, defaults, DragPan } from "ol/interaction";
import Circle from "ol/geom/Circle";
import CircleStyle from "ol/style/Circle";
import TileSource from "ol/source/Tile";
import TileImage from "ol/source/TileImage";
import { Coordinate } from "ol/coordinate";
import Polygon from "ol/geom/Polygon";
import LineString from "ol/geom/LineString";
@Component({
  selector: "home-map",
  templateUrl: "./map.component.html",
  styleUrls: ["./map.component.css"]
})
export class MapComponent implements AfterViewInit {
  map: Map;
  vectorSource: any;
  vectorLayer: any;
  casos: { Nome: string; Coordenadas: number[]; Total: number }[] = [
    { Nome: "Fortaleza", Total: 116, Coordenadas: [-38.532846, -3.776984] },
    { Nome: "Aquiraz", Total: 5, Coordenadas: [-38.392024, -3.91484] },
    { Nome: "Fortim", Total: 1, Coordenadas: [-38.0072816, -4.4628603] },
    {
      Nome: "Juazeiro do Norte",
      Total: 1,
      Coordenadas: [-39.321005, -7.231749]
    },
    { Nome: "Sobral", Total: 1, Coordenadas: [-40.8384533, -3.8579345] }
  ];

  aldeota = [
    [-38.4824294078032, -3.766503879495609],
    [-38.48242167913968, -3.7666304268755395],
    [-38.48234882437825, -3.767542008777477],
    [-38.48233070557428, -3.7677235631226327],
    [-38.48230150525275, -3.7680649641775816],
    [-38.48227972287798, -3.7683500998349393],
    [-38.48221050530534, -3.7692017953677897],
    [-38.48218867037731, -3.769423333421502],
    [-38.4821266958086, -3.7702096263547094],
    [-38.482108533847175, -3.770463824790296],
    [-38.482032010207504, -3.771333699510935],
    [-38.482021083951864, -3.7715352510809113],
    [-38.48199565294604, -3.771745931043489],
    [-38.48196647342706, -3.772203490285095],
    [-38.481907349290616, -3.772889548554154],
    [-38.48162083877602, -3.7764537783157595],
    [-38.48142937959548, -3.778407321685555],
    [-38.48128590665653, -3.780091077612728],
    [-38.48121033026514, -3.7810289827646857],
    [-38.48111702943568, -3.781937475816413],
    [-38.48109640023266, -3.782249932645008],
    [-38.48101172899437, -3.783184756379985],
    [-38.4809243725473, -3.7842425215929754],
    [-38.48082166149099, -3.7855256280372824],
    [-38.48071374166554, -3.786934297901071],
    [-38.48158781647531, -3.7870066529176802],
    [-38.48232329470735, -3.787070872538677],
    [-38.48244747858589, -3.7870847882503735],
    [-38.4831801701362, -3.7871406826249356],
    [-38.483274007256654, -3.7871490616390355],
    [-38.483970760364905, -3.7872131662528727],
    [-38.48425776871721, -3.7872327878749523],
    [-38.48490210573005, -3.7872996648955257],
    [-38.48509257028241, -3.7873192286566266],
    [-38.48567072511695, -3.7873667059437324],
    [-38.48582527067001, -3.7873612795511025],
    [-38.48648905334932, -3.7872882161513157],
    [-38.48658290367819, -3.787274340193161],
    [-38.48727704533912, -3.7871860959341177],
    [-38.48740394753511, -3.7871722395054173],
    [-38.48808151979716, -3.787081180297051],
    [-38.488191937776726, -3.787072922868817],
    [-38.48889157621246, -3.786979071633196],
    [-38.48900200065681, -3.786959777250609],
    [-38.489798274613605, -3.7868631779782875],
    [-38.4905206943147, -3.786775580988304],
    [-38.49089590082844, -3.7867447723841106],
    [-38.49210563641735, -3.7868062777755127],
    [-38.49240126293259, -3.786873939236121],
    [-38.49258827565214, -3.786944793575125],
    [-38.49278718233913, -3.787005251266966],
    [-38.49297682454388, -3.7870457104798465],
    [-38.49307390888213, -3.7870457674697158],
    [-38.49320118262967, -3.787012460189658],
    [-38.49346338054798, -3.7869538110695546],
    [-38.49388979238176, -3.7868347363096135],
    [-38.49398076793766, -3.7868084639888884],
    [-38.49464858216246, -3.786616071772217],
    [-38.49490304202346, -3.7865449333389303],
    [-38.494809134804925, -3.7861909751128993],
    [-38.494678352614805, -3.785751776268709],
    [-38.49461984686678, -3.785539508624084],
    [-38.494550628043115, -3.7853203592893894],
    [-38.494430560463485, -3.7848857804708707],
    [-38.49430284600391, -3.7844372653970137],
    [-38.49426283691997, -3.784321083542338],
    [-38.49417511454319, -3.7840182422483037],
    [-38.49404433018895, -3.7835836571412456],
    [-38.493956605674356, -3.783284705880044],
    [-38.49485492101323, -3.783019622814258],
    [-38.494895054805085, -3.78292049542914],
    [-38.495018688407086, -3.7824845210894527],
    [-38.495035654518254, -3.7824240996481833],
    [-38.495125253615235, -3.7821298657649747],
    [-38.49526108120781, -3.7819425897695753],
    [-38.49533685985669, -3.7818754176836045],
    [-38.49541516355104, -3.7818023667661844],
    [-38.495666263037826, -3.781621581027341],
    [-38.49587375582355, -3.7814718901259075],
    [-38.49591566556611, -3.781416096964914],
    [-38.49593567766186, -3.78138326943111],
    [-38.49634446545609, -3.7807430074864325],
    [-38.4964591750074, -3.7806315295431414],
    [-38.49694417724945, -3.7802599959418846],
    [-38.49702787894358, -3.780196085055415],
    [-38.49721256362569, -3.7800856427917333],
    [-38.49745463324833, -3.7799450181258063],
    [-38.49750013194929, -3.7799122053446097],
    [-38.49763299740898, -3.7798628879862997],
    [-38.49772208991356, -3.7798209634207582],
    [-38.4977512995248, -3.7797679672204803],
    [-38.49783039707957, -3.779723232390029],
    [-38.497890475896924, -3.7797068024166447],
    [-38.49816700006217, -3.7796320568636377],
    [-38.4983653435333, -3.7795737307370976],
    [-38.49849180630277, -3.7795390650372145],
    [-38.49866825387739, -3.7795008096307208],
    [-38.49875743013461, -3.779469740933174],
    [-38.498896715311126, -3.7793757368012586],
    [-38.498940355243604, -3.779286200578815],
    [-38.49903337059968, -3.778999386253381],
    [-38.499064332112056, -3.778875103677403],
    [-38.49911906030099, -3.7786092553181474],
    [-38.49914283486295, -3.778453938684121],
    [-38.49916835461017, -3.7782391867917964],
    [-38.49919034103798, -3.7780610716461727],
    [-38.49921044093611, -3.7778747229863208],
    [-38.499217769253754, -3.7778161956202876],
    [-38.49926153416763, -3.7776655043116176],
    [-38.499288857604924, -3.77760336986166],
    [-38.49931797801419, -3.7775485642084585],
    [-38.49939440126028, -3.7774554282518866],
    [-38.499595555365055, -3.777206038846878],
    [-38.499681169774455, -3.777103771084934],
    [-38.49973029157215, -3.7770343214488062],
    [-38.49978133696296, -3.776908331564295],
    [-38.49978861126247, -3.776786749234715],
    [-38.49978325165367, -3.7767100308271955],
    [-38.49975061466488, -3.7764577922948126],
    [-38.49973977245681, -3.776361891892405],
    [-38.499923531909936, -3.776292519994725],
    [-38.5000618001726, -3.7762432957536602],
    [-38.500694122693, -3.7760499724166543],
    [-38.501237278104774, -3.7758720669601407],
    [-38.501938421799416, -3.775649290284526],
    [-38.50147633395914, -3.7742223725576274],
    [-38.50145134190468, -3.7741448286483115],
    [-38.50123756580579, -3.773473265532979],
    [-38.50106525216656, -3.7728976204294056],
    [-38.50103271271456, -3.7727894945977423],
    [-38.50068737385731, -3.7728860945822613],
    [-38.498988288193694, -3.773436143673139],
    [-38.49882622138975, -3.772897776303459],
    [-38.49850167799155, -3.7719083411423053],
    [-38.49806396160469, -3.7705534476340774],
    [-38.497726679038315, -3.769480957059595],
    [-38.49741521103914, -3.768779302151304],
    [-38.4969693571203, -3.7677990240417376],
    [-38.496054368486114, -3.7657663524479856],
    [-38.49516529130707, -3.766285654479566],
    [-38.493567286317074, -3.7672604009415367],
    [-38.49341719366879, -3.767358197694616],
    [-38.49241936582993, -3.7679603903929286],
    [-38.49143270829219, -3.7685549891461823],
    [-38.49094512056374, -3.7687355449441657],
    [-38.489576102211046, -3.769284683892154],
    [-38.48891591905271, -3.769540495093833],
    [-38.48762563557657, -3.7700444439847813],
    [-38.48725124354416, -3.7690045873958233],
    [-38.48726642693681, -3.7686052793923244],
    [-38.48740223690002, -3.7672153492936977],
    [-38.487244825129714, -3.76720014851356],
    [-38.48552732287779, -3.767071032591229],
    [-38.4847924077744, -3.7669953290942804],
    [-38.48362244300994, -3.766889150726928],
    [-38.4824294078032, -3.766503879495609]
  ];

  ngAfterViewInit() {
    this.vectorSource = new VectorSource();
    this.vectorLayer = new VectorLayer({
      source: this.vectorSource
    });
    this.map = new Map({
      interactions: defaults({
        onFocusOnly: false
      }),
      target: "map",
      layers: [
        new TileLayer({
          source: new OSM()
        }),
        this.vectorLayer
      ],
      view: new View({
        center: olProj.fromLonLat([-38.563203, -3.834106]),
        zoom: 10,
        minZoom: 6
      })
    });
    this.casos.forEach(el => {
      this._createCircle(el);
    });
    this._createPolygon(this.aldeota, "2", "rgba(255,100,50,0.5)");
  }

  private _createCircle(pt: any) {
    let myStlye = new Style({
      fill: new Fill({
        color: "rgba(255,100,50,0.5)"
      }),
      stroke: new Stroke({
        color: "#ff0000",
        width: 1
      }),
      text: new Text({
        font: "Normal 15px Arial",
        textAlign: "center",
        textBaseline: "middle",
        text: `${pt.Nome} - ${pt.Total.toString()}`,
        fill: new Fill({
          color: "#ffa500"
        }),
        stroke: new Stroke({
          color: "#000000",
          width: 3
        }),
        // offsetX: -45,
        rotation: 0
      })
    });

    let circleSource = new VectorSource();
    let circleLayer = new VectorLayer({
      style: myStlye,
      source: circleSource
    });
    this.map.addLayer(circleLayer);
    circleSource.addFeature(
      new Feature(new Circle(olProj.fromLonLat(pt.Coordenadas), 2000))
    );
  }

  private _createPolygon(coords: any[], type: any, color: any) {
    let polyCoords: Coordinate[] = [];

    polyCoords = coords.map(e =>
      olProj.transform(
        [parseFloat(e[0]), parseFloat(e[1])],
        "EPSG:4326",
        "EPSG:3857"
      )
    );

    let feature: any;
    if (type === "2") {
      feature = new Feature({
        geometry: new Polygon([polyCoords])
      });
    } else {
      feature = new Feature({
        geometry: new LineString(polyCoords)
      });
    }
    feature.setStyle(
      new Style({
        fill: new Fill({
          color: color
        }),
        stroke: new Stroke({
          color: color,
          width: 4
        })
      })
    );

    const layer = new VectorLayer({
      source: new VectorSource({
        features: [feature]
      })
    });
    this.map.addLayer(layer);
  }
}
